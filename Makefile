# iac.tender.pro backend Makefile
SHELL    = /bin/bash
PRG     ?= $(shell basename $$PWD)
CFG     ?= .config

# docker images для "make deps"
CONSUP_IMAGES = consul nginx nodejs

PROJECT  ?= book

# Полный путь к текущему каталогу
APP_ROOT ?= $(shell dirname $$PWD)
# Имя текущего каталога
APP_PATH ?= $(shell basename $$PWD)

# каталог, в котором размещен consup/
CONSUP_ROOT ?= $(shell dirname $(APP_ROOT))

# имя сайта для контейнера
APP_SITE ?= doc.dev.lan

define CONFIG_DEF
# project config file, generated by make $(CFG)
APP_SITE=$(APP_SITE)
endef
export CONFIG_DEF

all: start

## настройка контейнера из CI хука
setup: $(CFG)

## старт контейнера из CI хука
start-hook: build startonly

## стартовать контейнер, предварительно удалив старый, если был
start: $(CFG) stop startonly

## стартовать контейнер, ничего не удаляя
startonly: $(CFG)
	@echo "*** $@ ***"
	@source $(CFG) && \
  fidm start mode=www name=$$APP_SITE \
    args_add=--volume=$(APP_ROOT)/$(APP_PATH):/home/app \
    args_add=--volume=$(APP_ROOT)/../log/http/$(APP_PATH):/var/log/nginx \
    args_add=--volume=$(APP_ROOT)/../log/$(APP_PATH):/var/log/supervisor

## остановить и удалить контейнер
stop: $(CFG)
	@echo "*** $@ ***"
	@source $(CFG) && \
  fidm rm mode=www name=$$APP_SITE

## остановить и удалить контейнер и все контейнеры, от которых он зависит
stopall: $(CFG)
	@echo "*** $@ ***"
	@source $(CFG) && \
  fidm rm -a mode=www name=$$APP_SITE

$(CFG):
	@echo "*** $@ ***"
	@[ -f $@ ] || echo "$$CONFIG_DEF" > $@

# ------------------------------------------------------------------------------
# Docker

## установка зависимостей
deps:
	@echo "*** $@ ***"
	@echo "Consup root: $(CONSUP_ROOT)"
	# code from http://docs.docker.com/linux/step_one/
	which docker > /dev/null || wget -qO- https://get.docker.com/ | sh
	# code from https://github.com/LeKovr/fidm
	which fidm > /dev/null || wget -qO- https://raw.githubusercontent.com/LeKovr/fidm/master/install.sh | sh
	# Каталог **consup** должен быть доступен из каталога **iac** как `../consup` или `../../consup`.
	[[ -d $(CONSUP_ROOT)/consup ]] || cd $(CONSUP_ROOT) && wget -qO- https://raw.githubusercontent.com/LeKovr/consup/master/install.sh | sh
	# контейнеры Docker
	for n in $(CONSUP_IMAGES) ; do docker pull lekovr/consup_$$n ; done
	@echo Done

# ------------------------------------------------------------------------------
# Gitbook

book-init: BOOK_CMD = init
book-init: book-cmd

book-install: BOOK_CMD = install
book-install: book-cmd

book-serve: BOOK_CMD = serve
book-serve: book-cmd

book-html: BOOK_CMD = html
book-html: book-cmd

book-pdf: BOOK_CMD = pdf
book-pdf: book-cmd

book-epub: BOOK_CMD = epub
book-epub: book-cmd

book-all: BOOK_CMD = all
book-all: book-cmd

book-cmd:
	@echo "*** $@ ***"
	@source $(CFG) && \
  FIDM_CMD="bash ./build.sh $(BOOK_CMD) $(PROJECT)" \
  fidm start nodejs.yml \
    args_add=--volume=$(APP_ROOT)/$(APP_PATH):/home/app

bash:
	@FIDM_CMD="bash" \
  fidm start nodejs.yml \
    args_add=-ti \
    args_add=--volume=$(APP_ROOT)/$(APP_PATH):/home/app \
    args_add=--rm \

dirs:
	@echo "*** $@ ***"
	@[ -L html ] || ln -s _book html

build: book-all dirs

.PHONY: all start stop stopall build serve book-cmd book-build

